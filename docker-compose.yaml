version: "3.8"

services:
  # -------------------------
  # TiDB Cluster
  # -------------------------
  pd:
    image: pingcap/pd
    container_name: pd
    ports:
      - "2379:2379"
    command:
      - --name=pd
      - --data-dir=/pd/data
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380

  tikv:
    image: pingcap/tikv
    container_name: tikv
    depends_on:
      - pd
    command:
      - --pd=pd:2379
      - --data-dir=/tikv/data

  tidb:
    image: pingcap/tidb
    container_name: tidb
    restart: always
    depends_on:
      - pd
      - tikv
    ports:
      - "4000:4000"
      - "10080:10080"
    command:
      - --store=tikv
      - --path=pd:2379
    volumes:
      - ./db:/docker-entrypoint-initdb.d  # Mount folder with init.sql


  # -------------------------
  # TiDB CDC
  # -------------------------
  tidb-cdc:
    image: pingcap/ticdc
    container_name: tidb-cdc
    depends_on:
      - tidb
      - pd
    command: ["/cdc", "server", "--pd=","http://pd:2379"]
    ports:
      - "8300:8300" 


  # -------------------------
  # Kafka & Zookeeper
  # -------------------------
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  # -------------------------
  # Node.js Consumer
  # -------------------------
  node-consumer:
    build: ./node-consumer
    container_name: node-consumer
    restart: always
    depends_on:
      - kafka
      - tidb
    environment:
      KAFKA_BROKER: kafka:9092
      CDC_TOPIC: cdc_events
    ports:
      - "3000:3000"  # For Prometheus metrics

  # -------------------------
  # Monitoring: Prometheus & Grafana
  # -------------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3000" # Change host port to avoid conflict with node metrics
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  # -------------------------
  # Logging: Elasticsearch & Filebeat
  # -------------------------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.0
    container_name: filebeat
    volumes:
      - ./logs:/usr/share/filebeat/logs
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - elasticsearch

